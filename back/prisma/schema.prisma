// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// L2DC
// Look to the Cross

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  nome      String
  email     String   @unique
  senha     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Enterprise {
  id                                 Int                                  @id @default(autoincrement())
  name                               String
  bio                                String
  document                           String
  email                              String                               @unique
  phone                              String                               @unique
  url                                String                               @unique
  logo                               Bytes?
  banner                             Bytes?
  addressId                          Int?                                 @map("address_id")
  address                            Address?                             @relation(fields: [addressId], references: [id])
  EnterpriseOpeningHours             EnterpriseOpeningHours[]
  EnterpriseUser                     EnterpriseUsers[]
  AssocPermissionGroupsFunctionality AssocPermissionGroupsFunctionality[]

  @@map("enterprise")
}

model Address {
  id             Int               @id @default(autoincrement())
  zipCode        String            @map("zip_code")
  street         String
  number         Int
  complement     String?
  district       String
  city           String
  state          String
  country        String
  Enterprise     Enterprise[]
  EnterpriseUser EnterpriseUsers[]

  @@map("address")
}

model EnterpriseOpeningHours {
  id           Int        @id @default(autoincrement())
  hourStart    String     @map("hour_start")
  hourEnd      String     @map("hour_end")
  active       Boolean
  weekDayId    Int        @map("week_day_id")
  weekDay      WeekDays   @relation(fields: [weekDayId], references: [id])
  enterpriseId Int        @map("enterprise_id")
  enterprise   Enterprise @relation(fields: [enterpriseId], references: [id])

  @@index([id])
  @@index([weekDayId])
  @@index([enterpriseId])
  @@index([enterpriseId, weekDayId])
  @@map("enterprise_opening_hours")
}

model WeekDays {
  id           Int                      @id @default(autoincrement())
  description  String                   @unique()
  abbreviation String                   @unique()
  OpeningHours EnterpriseOpeningHours[]

  @@index([id])
  @@map("week_days")
}

model EnterpriseUsers {
  id                        Int                         @id @default(autoincrement())
  name                      String
  email                     String                      @unique
  password                  String
  document                  String?
  phone                     String?
  active                    Boolean
  lastLogin                 DateTime?                   @map("last_login")
  profileLogo               Bytes?                      @map("profile_logo")
  addressId                 Int?                        @map("address_id")
  enterpriseId              Int                         @map("enterprise_id")
  Enterprise                Enterprise                  @relation(fields: [enterpriseId], references: [id])
  address                   Address?                    @relation(fields: [addressId], references: [id])
  EnterpriseUserPermissions EnterpriseUserPermissions[]

  @@index([id])
  @@index([email])
  @@map("enterprise_users")
}

model PermissionGroups {
  id                                 Int                                  @id @default(autoincrement())
  description                        String
  active                             Boolean
  EnterpriseUserPermissions          EnterpriseUserPermissions[]
  AssocPermissionGroupsFunctionality AssocPermissionGroupsFunctionality[]

  @@index([id])
  @@map("user_permissions")
}

model EnterpriseUserPermissions {
  id                Int              @id @default(autoincrement())
  permissionGroupID Int              @map("user_permission_id")
  PermissionGroup   PermissionGroups @relation(fields: [permissionGroupID], references: [id])
  enterpriseUserId  Int              @map("enterprise_user_id")
  EnterpriseUsers   EnterpriseUsers  @relation(fields: [enterpriseUserId], references: [id])

  @@index([id])
  @@index([permissionGroupID])
  @@index([enterpriseUserId])
  @@map("enterprise_user_permissions")
}

model Module {
  id            Int             @id @default(autoincrement())
  description   String
  active        Boolean
  Functionality Functionality[]

  @@map("module")
}

model Functionality {
  id                                 Int                                  @id @default(autoincrement())
  description                        String
  active                             Boolean
  moduleId                           Int                                  @map("module_id")
  Module                             Module                               @relation(fields: [moduleId], references: [id])
  AssocPermissionGroupsFunctionality AssocPermissionGroupsFunctionality[]

  @@map("functionality")
}

model AssocPermissionGroupsFunctionality {
  id                Int              @id @default(autoincrement())
  permissionGroupId Int              @map("permission_group_id")
  PermissionGroup   PermissionGroups @relation(fields: [permissionGroupId], references: [id])
  functionalityId   Int              @map("functionality_id")
  Functionality     Functionality    @relation(fields: [functionalityId], references: [id])
  enterpriseId      Int              @map("enterprise_id")
  Enterprise        Enterprise       @relation(fields: [enterpriseId], references: [id])

  @@map("assoc_permission_groups_functionality")
}
